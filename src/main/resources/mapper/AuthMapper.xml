<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.zirauser.dao.AuthMapper">
    <resultMap id="AuthMap" type="com.example.zirauser.entity.Auth">
        <id column="project_auth_id" property="id" jdbcType="VARCHAR"/>
        <result column="project_id" property="projectId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="project_user_role" property="role" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="auth">
        project_auth_id, project_id, user_id, project_user_role
    </sql>

    <select id="getAuthById" resultMap="AuthMap">
        SELECT
        <include refid="auth"/>
        FROM project_auth
        WHERE project_auth_id = #{id}
    </select>

    <select id="getAuthByUserId" resultMap="AuthMap">
        SELECT
        <include refid="auth"/>
        FROM project_auth
        WHERE user_id = #{userId}
    </select>

    <update id="updateAuth">
        UPDATE project_auth
        <set>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="role != null">
                project_user_role = #{role},
            </if>
        </set>
        WHERE project_auth_id = #{id}
    </update>

    <insert id="addAuth">
        <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
            SELECT uuid()
        </selectKey>
        INSERT INTO project_auth
        <trim prefix="(" suffix=")" suffixOverrides="," >
            project_auth_id,
            project_id,
            user_id,
            project_user_role,
        </trim>

        <trim prefix="VALUES (" suffix=")" suffixOverrides="," >
            #{id},
            #{projectId},
            #{userId},
            #{role},
        </trim>
    </insert>

    <select id="getAuthUserByProjectId" resultMap="AuthMap">
        SELECT
        <include refid="auth"/>
        FROM project_auth
        WHERE project_id = #{id}
    </select>

    <delete id="deleteAuthById">
        DELETE FROM project_auth WHERE project_auth_id = #{id}
    </delete>

    <delete id="deleteAuthByProjectId">
        DELETE FROM project_auth WHERE project_id = #{id}
    </delete>
</mapper>